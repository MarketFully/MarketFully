<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ServiceCenterMapper">
	<!-- resultMap -->
	<resultMap type="Notice" id="NoticeboardResultSet">
		<id property="notice_num" column="NOTICE_NUM"/>
		<result property="notice_title" column="NOTICE_TITLE"/>
		<result property="notice_content" column="NOTICE_CONTENT"/>
		<result property="notice_writer" column="NOTICE_WRITER"/>
		<result property="notice_cdate" column="NOTICE_CDATE"/>
		<result property="notice_status" column="NOTICE_STATUS"/>
		<result property="notice_count" column="NOTICE_COUNT"/>	
	</resultMap>
	
	<resultMap type="Qna" id="QnaboardResultSet">
		<id property="q_NUM" column="Q_NUM"/>
		<result property="q_TITLE" column="Q_TITLE"/>
		<result property="q_CONTENT" column="Q_CONTENT"/>
		<result property="q_WRITER" column="Q_WRITER"/>
		<result property="oR_NUM" column="OR_NUM"/>
		<result property="q_STATUS" column="Q_STATUS"/>
		<result property="q_CDATE" column="Q_CDATE"/>
		<result property="q_COUNT" column="Q_COUNT"/>
		<result property="q_RCOUNT" column="Q_RCOUNT"/>
		<result property="q_CATEGORY" column="Q_CATEGORY"/>
	</resultMap>
	
	<!-- RecipeSuggest -->
	<resultMap type="REQUEST_BOARD" id="requestResultSet">
		<id property="rb_num" column="RB_NUM"/>
		<result property="rb_title" column="RB_TITLE"/>
		<result property="rb_foodcategory" column="RB_FOODCATEGORY"/>
		<result property="rb_content" column="RB_CONTENT"/>
		<result property="rb_writer" column="RB_WRITER"/>
		<result property="rb_date" column="RB_DATE"/>
		<result property="rb_file" column="RB_FILE"/>
		<result property="rb_refile" column="RB_REFILE"/>
		<result property="rb_thank" column="RB_THANK"/>
		<result property="rb_nothank" column="RB_NOTHANK"/>
		<result property="rb_status" column="RB_STATUS"/>
		<result property="rb_count" column="RB_COUNT"/>		
	</resultMap>
	
	<resultMap type="BoardLike" id="boardLikeResultSet">
		<id property="mem_num" column="MEM_NUM"/>
		<result property="rb_num" column="RB_NUM"/>
	</resultMap>
	
	<resultMap type="QnaSearch" id="QnaSearchResultSet">
		<id property="q_title" column="Q_TITLE"/>
		<result property="q_writer" column="Q_WRITER"/>
		<result property="q_category" column="Q_CATEGORY"/>
	</resultMap>
	
	<resultMap type="QnaReply" id="QnaReplyResultSet">
		<id property="q_num" column="Q_NUM"/>
		<result property="qr_num" column="QR_NUM"/>
		<result property="qr_content" column="QR_CONTENT"/>
		<result property="qr_writer" column="QR_WRITER"/>
		<result property="qr_date" column="QR_DATE"/>
		<result property="qr_thank" column="QR_THANK"/>
		<result property="qr_status" column="QR_STATUS"/>
	</resultMap>
	
	<select id="getListCountNotice" resultType="_int">
		SELECT COUNT(*)
		FROM NOTICE
		WHERE NOTICE_STATUS='Y'
	</select>	
	
	<select id="NoticeselectList" resultMap="NoticeboardResultSet">
		SELECT *
		FROM NOTICE
		WHERE NOTICE_STATUS='Y'
		ORDER BY NOTICE_NUM DESC
	</select>
	
	<!-- 공지사항 상세보기 -->
	<select id="selectNoticeBoard" resultMap="NoticeboardResultSet">
		SELECT *
		FROM NOTICE
		WHERE NOTICE_NUM=#{notice_num}
		AND NOTICE_STATUS='Y'
	</select>
	
	<!-- 공지사항 카운트 -->
	<update id="updateNoticeCount" parameterType="_int">
		UPDATE NOTICE
		SET NOTICE_COUNT = NOTICE_COUNT + 1
		WHERE NOTICE_NUM = #{notice_num}
	</update>
	
	<select id="getListCountQna" resultType="_int">
		SELECT COUNT(*)
		FROM QNA_BOARD
		WHERE Q_STATUS='Y'
	</select>
	
	<!-- QNA 리스트 -->
	<select id="QnaselectList" resultMap="QnaboardResultSet">
        SELECT *
		FROM QNA_BOARD
		WHERE Q_STATUS='Y'
		<choose>
			<when test="q_title != null">
				AND Q_TITLE LIKE '%' || #{q_title} || '%'
			</when>
			<when test="q_writer != null">
				AND Q_WRITER LIKE '%' || #{q_writer} || '%'
			</when>
			<otherwise>
				AND Q_CATEGORY LIKE '%' || #{q_category} || '%'
			</otherwise>
		</choose>
		ORDER BY Q_NUM DESC
	</select>
	
	<!-- QNA 작성 -->
	<insert id="QNAinsert" parameterType="Qna">
		INSERT INTO QNA_BOARD
		VALUES(SEQ_QNA.NEXTVAL, #{q_TITLE},#{q_CONTENT},#{q_WRITER},#{oR_NUM},'Y',SYSDATE,#{q_COUNT},#{q_RCOUNT},#{q_CATEGORY},#{q_FILE},#{q_REFILE})
	</insert>
	
	<update id="updateCount" parameterType="_int">
		UPDATE QNA_BOARD
		SET Q_COUNT = Q_COUNT +1
		WHERE Q_NUM=#{bId}
	</update>
	
	<select id="selectBoard" resultMap="QnaboardResultSet">
		SELECT * 
		FROM QNA_BOARD
		WHERE Q_NUM=#{bId}
		AND Q_STATUS='Y'
	</select>
	
	<!-- QNA 작성 글 삭제  -->
	<update id="deleteQNA" parameterType="_int">
		UPDATE QNA_BOARD
		SET Q_STATUS='N'
		WHERE Q_NUM = #{q_NUM}
	</update>
	
	<!-- QNA 작성한글 수정 -->
	<update id="qndBoardUpdate" parameterType="Qna">
		UPDATE QNA_BOARD
		SET Q_TITLE=#{q_TITLE}, OR_NUM=#{oR_NUM} , Q_CONTENT=#{q_CONTENT}, Q_FILE=#{q_FILE}, Q_REFILE=#{q_REFILE}
		WHERE Q_NUM = #{q_NUM}
	</update>
	
	<!-- 레시피 제안 -->
	<select id="getRSlistCountRecipeSuggest" resultType="_int">
		SELECT COUNT(*)
		FROM REQUEST_BOARD
		WHERE RB_STATUS='Y'
	</select>
	
	<select id="recipeSuggestselectList" resultMap="requestResultSet">
		SELECT *
		FROM REQUEST_BOARD
		WHERE RB_STATUS='Y'
		ORDER BY RB_NUM DESC
	</select>
	
	<!-- 레시피 제안 작성  -->
	<insert id="insertSuggestWrite" parameterType="REQUEST_BOARD">
		INSERT INTO REQUEST_BOARD
		VALUES(SEQ_RB_NUM.NEXTVAL,#{rb_title}, #{rb_foodcategory}, #{rb_content}, #{rb_writer}, SYSDATE ,#{rb_file},#{rb_refile},0,0,'Y',0)
	</insert>
	
	<!-- 레시피 제안 조회수  -->
	<update id="updatecountSuggestWrite" parameterType="_int">
		UPDATE REQUEST_BOARD
		SET RB_COUNT = RB_COUNT + 1
		WHERE RB_NUM = #{rb_num}
	</update>
	
	<!-- 레시피 제안 상세보기 -->
	<select  id="selectSuggestWrite" resultMap="requestResultSet">
		SELECT *
		FROM REQUEST_BOARD RB
		WHERE RB_NUM=#{rb_num}
		AND RB_STATUS='Y'
	</select>
	
	<!-- 레시피 제안 삭제 -->
	<update id="deleteSuggestWrite" parameterType="_int" >
		UPDATE REQUEST_BOARD
		SET RB_STATUS='N'
		WHERE RB_NUM=#{rb_num}
	</update>
	
	<!-- 레시피 제안 수정 -->
	<update id="updateSuggestWrite" parameterType="REQUEST_BOARD">
		UPDATE REQUEST_BOARD
		SET RB_TITLE=#{rb_title},RB_FOODCATEGORY=#{rb_foodcategory},RB_CONTENT=#{rb_content},RB_FILE=#{rb_file},RB_REFILE=#{rb_refile}
		WHERE RB_NUM=#{rb_num}
	</update>
	
	<!-- 레시피 제안 좋아요 값 -->
	<update id="RecipeLikey" parameterType="REQUEST_BOARD">
		UPDATE REQUEST_BOARD
		SET RB_THANK = (SELECT COUNT(*)
		FROM BOARDLIKE
		WHERE RB_NUM = #{rb_num})
		WHERE RB_NUM = #{rb_num}
	</update>
	
	<!-- 레시피 제안 좋아요 -->
	<insert id="RecipeCreateLike" parameterType="BoardLike">
		INSERT INTO BOARDLIKE
		VALUES(#{mem_num},#{rb_num})
	</insert>
	
	<!-- 해당 글을 좋아요 눌렀었던 적이 있는지 체크 -->
	<select id="RecipecheckLike" resultType="_int" parameterType="BoardLike">
	SELECT COUNT(*) FROM BOARDLIKE
	WHERE MEM_NUM = #{mem_num}
	AND RB_NUM = #{rb_num}
	</select>
	
	<!-- 레시피 제안 취소 -->
	<delete id="RecipedeleteLike" parameterType="BoardLike">
		DELETE FROM BOARDLIKE
		WHERE MEM_NUM = #{mem_num}
		AND RB_NUM = #{rb_num}
	</delete>
	
	<!-- QNA 댓글 리스트 -->
	<select id="qnaselectReplyList" resultMap="QnaReplyResultSet"  parameterType="_int">
		SELECT *
		FROM QNA_REPLY
		WHERE QR_NUM=#{q_NUM}
		AND QR_STATUS='Y'
		ORDER BY Q_NUM DESC
	</select>
	
	<!-- QNA 리스트 검색 -->
	<select id="getQNASearchListCount" resultType="_int">
		SELECT COUNT(*)
		FROM QNA_BOARD
		WHERE Q_STATUS='Y'
		<if test="q_title != null">
			AND Q_TITLE LIKE '%' || #{q_title} ||'%'
		</if>
		<if test="q_writer != null">
			AND Q_WRITER LIKE '%' || #{q_writer} || '%'
		</if>
		<if test="q_category != null">
			AND Q_CATEGORY LIKE '%' || #{q_category} || '%'
		</if>
	</select>
	
	<!-- QNA 리스트 -->
	<select id="selectQNASearch" resultMap="QnaboardResultSet">
        SELECT *
		FROM QNA_BOARD
		WHERE Q_STATUS='Y'
		<if test="q_title != null">
			AND Q_TITLE LIKE '%' || #{q_title} ||'%'
		</if>
		<if test="q_writer != null">
			AND Q_WRITER LIKE '%' || #{q_writer} || '%'
		</if>
		<if test="q_category != null">
			AND Q_CATEGORY LIKE '%' || #{q_category} || '%'
		</if>
	</select>
	
	<!-- QNA 댓글등록 -->
	<insert id="qnainsertReply" parameterType="QnaReply">
		INSERT INTO QNA_REPLY
		VALUES (SEQ_QNA_NUM.NEXTVAL,#{q_num}, #{qr_content} ,#{qr_writer}, SYSDATE, NULL, 'Y')
	</insert>
	
	<!-- QNA 댓글 삭제 -->
	<delete id="qnadeleteReply" parameterType="QnaReply">
		DELETE FROM QNA_REPLY
		WHERE Q_NUM = #{q_num}
	</delete>
</mapper>






